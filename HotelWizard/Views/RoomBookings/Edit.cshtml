@model HotelWizard.Models.RoomBooking
@{
    ViewBag.Title = "Edit";
}

<h3>Room Reservation Details For:</h3>
<h3>@Html.DisplayTextFor(model => model.customer.name)</h3>

<table class="table">
    <tr>
        <th>Check-in Date</th>
        <th>Check-out Date</th>
        <th>Room Number</th>
        <th>Room Type</th>
        <th>Standard room Rate</th>
    </tr>
    <tr>
        <td>
            @Html.DisplayFor(model => model.checkin)
        </td>
        <td>
            @Html.DisplayFor(model => model.checkout)
        </td>
        <td>
            @Html.DisplayFor(model => model.room.roomNum)
        </td>
        <td>
            @Html.DisplayFor(model => model.room.roomType)
        </td>
        <td>
            @Html.DisplayFor(model => model.room.roomRate)
        </td>
    </tr>
</table>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                <!--Only status attributes are editable, the rest are hidden-->
                @Html.ValidationSummary(true)
                @Html.HiddenFor(model => model.RoomBookingId)
                @Html.HiddenFor(model => model.customerID)
                @Html.HiddenFor(model => model.roomID)
                @Html.HiddenFor(model => model.checkin)
                @Html.HiddenFor(model => model.checkout)
                @Html.HiddenFor(model => model.numPeople)
                @Html.HiddenFor(model => model.specialRate)
                
                <div class="form-group">
                    @Html.Label("Confirmed and Deposit Paid", new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.isDepositPaid)
                        @Html.ValidationMessageFor(model => model.isDepositPaid)
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Checked In", new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.isCheckedIn)
                        @Html.ValidationMessageFor(model => model.isCheckedIn)
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Checked Out", new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.isCheckedOut)
                        @Html.ValidationMessageFor(model => model.isCheckedOut)
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                        <input type="button" value="Cancel" class="btn btn-default" onclick="goBack()" />
                    </div>
                </div>
            </div>
        }


        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
        <script>
            function goBack() {
                window.history.back()
            }
        </script>
