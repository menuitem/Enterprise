@model HotelWizard.Models.RoomBooking

@{
    ViewBag.Title = "Create";
    var custid = (String) ViewBag.customerID.ToString();
    DateTime checkin = (DateTime)(Session["checkin"]);
    DateTime checkout = (DateTime)(Session["checkout"]);
    int roomNum = (int)(Session["roomNum"]);
}

<h2>Create</h2>
<table class="table">
    <tr>
        <th>Check-in Date</th>
        <th>Check-out Date</th>
        <th>Room Number</th>
    </tr>
    <tr>
        <td>
            @checkin
        </td>
        <td>
            @checkout
        </td>
        <td>
            @roomNum
        </td>
    </tr>
</table>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h3>Create Room Reservation Details</h3>
        <hr />
        
        @Html.ValidationSummary(true)    
        @Html.Hidden("customerID", custid)
        @Html.Hidden("checkin", checkin)
        @Html.Hidden("checkout", checkout)
        @Html.Hidden("roomID", roomNum)
        

        <div class="form-group">
            @Html.LabelFor(model => model.specialRate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.specialRate)
                @Html.ValidationMessageFor(model => model.specialRate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.numPeople, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.numPeople)
                @Html.ValidationMessageFor(model => model.numPeople)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.isDepositPaid, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.isDepositPaid)
                @Html.ValidationMessageFor(model => model.isDepositPaid)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.isCheckedIn, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.isCheckedIn)
                @Html.ValidationMessageFor(model => model.isCheckedIn)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.isCheckedOut, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.isCheckedOut)
                @Html.ValidationMessageFor(model => model.isCheckedOut)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
